package GUI;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

import DbConnect.Conn;

//import java.sql.*;

@SuppressWarnings("serial")
public class Login extends JFrame implements MouseListener, ActionListener{	
	private String enteredId;
	private String enteredPass;
	private String indicator;
	private ImageIcon image;
	private JLabel hyperlink;
	private JTextField idField;
	private JLabel password;
	private JPasswordField passField;
	private JButton cancel;
	private JButton login;
	private JLabel idNumber;
	private JRadioButton student;
	private JRadioButton admin;
	private JRadioButton teacher;
	private ButtonGroup group;

	
	
	
	
	
	Login(){
		image = new ImageIcon("../CourseManagementSystem_2060276/pngwing.com.png");
		hyperlink = new JLabel("Or click here to register instead.");
		idField = new JTextField();
		password = new JLabel("Password");
		passField = new JPasswordField();
		cancel = new JButton("Cancel");
		login = new JButton("Login");
		idNumber = new JLabel("ID Number");
		
		student = new JRadioButton("student");
		teacher =  new JRadioButton("teacher");
		admin = new JRadioButton("admin");
		
		
		idNumber.setBounds(40, 70, 100, 30);
		
		idNumber.setForeground(new Color(0XFFDFA));
		
		idField.setBackground(new Color(0X8193a8));		
		idField.setBounds(150, 70, 150, 30);
		
		
		password.setForeground(new Color(0XFFDFA));
		password.setBounds(40, 120, 100, 30);
		
		
		
		passField.setBounds(150, 120, 150, 30);
		passField.setBackground(new Color(0X8193a8));
		
		cancel.setBounds(140, 220,75, 30);
		cancel.setBackground(new Color(0xff3b2b));
		cancel.addActionListener(this);
		
		login.setBounds(240, 220, 75, 30);
		login.setBackground(new Color(0x38b8ff));
		login.addActionListener(this);
		hyperlink.setForeground(Color.WHITE.darker());
		hyperlink.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		hyperlink.addMouseListener(this);
		hyperlink.setBounds(130, 270, 240, 30);
		hyperlink.setFont(new Font("monospace", Font.BOLD + Font.ITALIC, 14));
		
		
		group = new ButtonGroup();
		group.add(student);
		group.add(teacher);
		group.add(admin);
		
	
		student.setBounds(70, 175, 70, 20);
		teacher.setBounds(165, 175, 70, 20);
		admin.setBounds(255, 175, 70, 20);
		student.setBackground(new Color(0X2d3e50));
		student.setForeground(Color.white);
		
		student.addActionListener(this);
		teacher.addActionListener(this);
		admin.addActionListener(this);
		
		this.setResizable(false);
		this.getContentPane().setBackground(new Color(0X2d3e50));
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		
		this.setIconImage(image.getImage());
		this.add(idField);
		
		this.add(idNumber);
		this.add(password);
		this.add(passField);
		this.add(cancel);
		this.add(login);
		this.add(hyperlink);
		this.add(student);
		this.add(teacher);
		this.add(admin);
		
	
		
		this.setSize(450,360);
		this.setLayout(null);
		this.setVisible(true);
		
		
		
	}





	public void mousePressed(MouseEvent e) {
		System.out.print("");
	}


	public void mouseReleased(MouseEvent e) {
		System.out.print("");
		
	}


	public void mouseEntered(MouseEvent e) {
		hyperlink.setFont(new Font("monospace", Font.BOLD + Font.ITALIC, 15));
		
	}


	public void mouseExited(MouseEvent e) {
		System.out.println("");
		
	}





	public void mouseClicked(MouseEvent e) {
		try {
			this.dispose();
			new Register();
		}
		catch(Exception ex){
			ex.printStackTrace();
			
		}
		
	}





	public void actionPerformed(ActionEvent e) {
		if (e.getSource()==login){			
			if (student.isSelected()) {
				indicator = "student";
			}
			else if (admin.isSelected()) {
				indicator = "admin";
				
			}
			else if(teacher.isSelected()){
				indicator = "teacher";
			}
			else{
				JOptionPane.showMessageDialog(null, "You need to select a user.");
				
			}
		try {
			
			Conn con = new Conn();
			enteredId = idField.getText();
			enteredPass = String.valueOf(passField.getPassword());
			String query = "SELECT * FROM userinfo WHERE id_number = '"+enteredId+"' AND password = '"+enteredPass+"' AND indicator = '"+indicator+"'";
			ResultSet rs = con.s.executeQuery(query);    
			if (rs.next()) {
				System.out.println("UHM");
			}
			else {
				JOptionPane.showMessageDialog(null, "Invalid Login.");
				
			}
			
			
		}
		catch(Exception ex) {
			ex.printStackTrace();
		}
			
		}
		
		}
		
	
		
	


	


	




}
